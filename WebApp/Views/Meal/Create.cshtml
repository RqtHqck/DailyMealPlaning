@model WebApp.Models.MealItem
@{
    var types = (IEnumerable<WebApp.Models.MealType>)ViewBag.MealTypes;
}

<h2>Создать приём пищи</h2>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label>Тип</label>
        <select asp-for="Type" class="form-control" onchange="onTypeChange(this)">
            @foreach (var t in types)
            {
                <option value="@t">@t</option>
            }
        </select>
    </div>

    <div class="form-group" id="customTypeNameDiv" style="display:none;">
        <label>Свой тип</label>
        <input asp-for="CustomTypeName" class="form-control"/>
    </div>

    <div class="form-group">
        <label>Название приёма</label>
        <input asp-for="Name" class="form-control"/>
    </div>

    <div id="product-list" class="mb-3">
        <h4>Продукты</h4>
        <button type="button" class="btn btn-secondary mb-2" onclick="addProduct()">Добавить продукт</button>
    </div>

    <button type="submit" class="btn btn-success">Сохранить</button>
</form>

@section Scripts {
    <script>
        function onTypeChange(select) {
            const div = document.getElementById('customTypeNameDiv');
            div.style.display = select.value === 'Custom' ? 'block' : 'none';
        }

        let productIndex = 0;

        function addProduct() {
            const list = document.getElementById('product-list');
            const html = `
                <div class="border p-2 mb-2">
                    <input name="Products[${productIndex}].Name" placeholder="Название" class="form-control mb-1" required />
                    <input name="Products[${productIndex}].Gramms" placeholder="Граммы" class="form-control mb-1" type="number" required />
                </div>
            `;
            list.insertAdjacentHTML('beforeend', html);
            productIndex++;
        }
    </script>
}
